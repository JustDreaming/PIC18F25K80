%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$main.obj
cinit CODE 0 7FD4 7FD4 6 1
text0 CODE 0 7FDA 7FDA 26 1
text1 CODE 0 7FCE 7FCE 6 1
text2 CODE 0 7FC8 7FC8 2 1
text3 CODE 0 7FCA 7FCA 4 1
cstackCOMRAM COMRAM 1 1 1 7 1
$startup.obj
init CODE 0 0 0 4 1
config CONFIG 0 300000 300000 E 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 60-E40 1
SFR E41-FFF 1
BANK0 60-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
BANK6 600-6FF 1
BANK7 700-7FF 1
BANK8 800-8FF 1
BANK9 900-9FF 1
CONST 4-7FC7 1
IDLOC 200000-200007 1
STACK 60-E40 1
SMALLCONST F00-7FC7 1
CODE 4-7FC7 1
BANK10 A00-AFF 1
BANK11 B00-BFF 1
BANK12 C00-CFF 1
BANK13 D00-DFF 1
BANK14 E00-E40 1
BIGRAM 8-E40 1
COMRAM 8-5F 1
EEDATA F00000-F003FF 1
MEDIUMCONST F00-7FC7 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$main.obj
7FCA text3 CODE >12:/home/isaac/repo/PIC18F25K80/src/gpio.c
7FCA text3 CODE >13:/home/isaac/repo/PIC18F25K80/src/gpio.c
7FCC text3 CODE >14:/home/isaac/repo/PIC18F25K80/src/gpio.c
7FC8 text2 CODE >5:/home/isaac/repo/PIC18F25K80/src/can.c
7FC8 text2 CODE >7:/home/isaac/repo/PIC18F25K80/src/can.c
7FCE text1 CODE >6:/home/isaac/repo/PIC18F25K80/src/gpio.c
7FCE text1 CODE >8:/home/isaac/repo/PIC18F25K80/src/gpio.c
7FD0 text1 CODE >9:/home/isaac/repo/PIC18F25K80/src/gpio.c
7FD2 text1 CODE >10:/home/isaac/repo/PIC18F25K80/src/gpio.c
7FDA text0 CODE >17:/home/isaac/repo/PIC18F25K80/src/main.c
7FDA text0 CODE >21:/home/isaac/repo/PIC18F25K80/src/main.c
7FDE text0 CODE >22:/home/isaac/repo/PIC18F25K80/src/main.c
7FE2 text0 CODE >24:/home/isaac/repo/PIC18F25K80/src/main.c
7FE2 text0 CODE >25:/home/isaac/repo/PIC18F25K80/src/main.c
7FE6 text0 CODE >26:/home/isaac/repo/PIC18F25K80/src/main.c
7FF2 text0 CODE >27:/home/isaac/repo/PIC18F25K80/src/main.c
7FFA text0 CODE >28:/home/isaac/repo/PIC18F25K80/src/main.c
7FFE text0 CODE >24:/home/isaac/repo/PIC18F25K80/src/main.c
7FD4 cinit CODE >2880:/home/isaac/repo/PIC18F25K80/src/main.as
7FD4 cinit CODE >2882:/home/isaac/repo/PIC18F25K80/src/main.as
7FD4 cinit CODE >2885:/home/isaac/repo/PIC18F25K80/src/main.as
7FD4 cinit CODE >2891:/home/isaac/repo/PIC18F25K80/src/main.as
7FD4 cinit CODE >2893:/home/isaac/repo/PIC18F25K80/src/main.as
7FD6 cinit CODE >2894:/home/isaac/repo/PIC18F25K80/src/main.as
$startup.obj
0 text CODE >51:/home/isaac/repo/PIC18F25K80/src/startup.as
0 text CODE >52:/home/isaac/repo/PIC18F25K80/src/startup.as
0 text CODE >53:/home/isaac/repo/PIC18F25K80/src/startup.as
0 text CODE >55:/home/isaac/repo/PIC18F25K80/src/startup.as
0 init CODE >118:/home/isaac/repo/PIC18F25K80/src/startup.as
0 init CODE >120:/home/isaac/repo/PIC18F25K80/src/startup.as
0 reset_vec CODE >97:/home/isaac/repo/PIC18F25K80/src/startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hspace_0 30000E 0 ABS 0 - main.obj
__Hspace_1 8 0 ABS 0 - main.obj
__Hspace_2 0 0 ABS 0 - main.obj
__CFG_IESO$OFF 0 0 ABS 0 - main.obj
__size_of_initGpio 0 0 ABS 0 - main.obj
__Hibigdata 0 0 CODE 0 ibigdata main.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__CFG_MCLRE$ON 0 0 ABS 0 - main.obj
__Lsmallconst 0 0 SMALLCONST 0 smallconst main.obj
___sp 0 0 STACK 2 stack startup.obj
_main 7FDA 0 CODE 0 text0 main.obj
start 0 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - main.obj
__CFG_WDTEN$OFF 0 0 ABS 0 - main.obj
_blinkLed 7FCA 0 CODE 0 text3 main.obj
__end_of_blinkLed 7FCE 0 CODE 0 text3 main.obj
__Hpowerup 0 0 CODE 0 powerup main.obj
__accesstop 60 0 ABS 0 - startup.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
_initGpio 7FCE 0 CODE 0 text1 main.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
__CFG_EBTR0$OFF 0 0 ABS 0 - main.obj
__CFG_EBTR1$OFF 0 0 ABS 0 - main.obj
__CFG_EBTR2$OFF 0 0 ABS 0 - main.obj
__CFG_EBTR3$OFF 0 0 ABS 0 - main.obj
__CFG_EBTRB$OFF 0 0 ABS 0 - main.obj
__Hifardata 0 0 CODE 0 ifardata main.obj
__Hclrtext 0 0 ABS 0 clrtext main.obj
__end_of_initGpio 7FD4 0 CODE 0 text1 main.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__size_of_initCan 0 0 ABS 0 - main.obj
__Hintcode_body 0 0 ABS 0 intcode_body main.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hintcodelo 0 0 CODE 0 intcodelo main.obj
__Lintcodelo 0 0 CODE 0 intcodelo main.obj
__CFG_FCMEN$OFF 0 0 ABS 0 - main.obj
start_initialization 7FD4 0 CODE 0 cinit main.obj
__CFG_BORPWR$ZPBORMV 0 0 ABS 0 - main.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
_TRISBbits F93 0 ABS 0 - main.obj
__CFG_MSSPMSK$MSK7 0 0 ABS 0 - main.obj
___rparam_used 1 0 ABS 0 - main.obj
__end_of_initCan 7FCA 0 CODE 0 text2 main.obj
__CFG_WDTPS$1048576 0 0 ABS 0 - main.obj
__Hbank0 0 0 ABS 0 bank0 main.obj
__Hbank1 0 0 ABS 0 bank1 main.obj
__Hbank2 0 0 ABS 0 bank2 main.obj
__Hbank3 0 0 ABS 0 bank3 main.obj
__Hbank4 0 0 ABS 0 bank4 main.obj
__Hbank5 0 0 ABS 0 bank5 main.obj
__Hbank6 0 0 ABS 0 bank6 main.obj
__Hbank7 0 0 ABS 0 bank7 main.obj
__Hbank8 0 0 ABS 0 bank8 main.obj
__Hbank9 0 0 ABS 0 bank9 main.obj
__Hcinit 0 0 ABS 0 cinit main.obj
__Hconst 0 0 CONST 0 const main.obj
__Hidata 0 0 CODE 0 idata main.obj
__Hidloc 0 0 IDLOC 0 idloc main.obj
__Hnvbit 0 0 COMRAM 1 nvbit main.obj
__Hparam 0 0 COMRAM 1 rparam main.obj
__Hrdata 0 0 COMRAM 1 rdata main.obj
__Hstack 0 0 STACK 2 stack main.obj
__Htext0 0 0 ABS 0 text0 main.obj
__Htext1 0 0 ABS 0 text1 main.obj
__Htext2 0 0 ABS 0 text2 main.obj
__Htext3 0 0 ABS 0 text3 main.obj
__Hbank10 0 0 ABS 0 bank10 main.obj
__Hbank11 0 0 ABS 0 bank11 main.obj
__Hbank12 0 0 ABS 0 bank12 main.obj
__Hbank13 0 0 ABS 0 bank13 main.obj
__Hbank14 0 0 ABS 0 bank14 main.obj
__Hbigbss 0 0 BIGRAM 1 bigbss main.obj
__Hbigram 0 0 ABS 0 bigram main.obj
__smallconst 0 0 SMALLCONST 0 smallconst startup.obj
__CFG_FOSC$INTIO2 0 0 ABS 0 - main.obj
__Hcomram 0 0 ABS 0 comram main.obj
__Hconfig 30000E 0 CONFIG 0 config main.obj
__Lbank0 0 0 ABS 0 bank0 main.obj
__Lbank1 0 0 ABS 0 bank1 main.obj
__Lbank2 0 0 ABS 0 bank2 main.obj
__Lbank3 0 0 ABS 0 bank3 main.obj
__Lbank4 0 0 ABS 0 bank4 main.obj
__Lbank5 0 0 ABS 0 bank5 main.obj
__Lbank6 0 0 ABS 0 bank6 main.obj
__Lbank7 0 0 ABS 0 bank7 main.obj
__Lbank8 0 0 ABS 0 bank8 main.obj
__Lbank9 0 0 ABS 0 bank9 main.obj
__Lcinit 0 0 ABS 0 cinit main.obj
__Lconst 0 0 CONST 0 const main.obj
__Lidata 0 0 CODE 0 idata main.obj
__Lidloc 0 0 IDLOC 0 idloc main.obj
__Lnvbit 0 0 COMRAM 1 nvbit main.obj
__Lparam 0 0 COMRAM 1 rparam main.obj
__Lrdata 0 0 COMRAM 1 rdata main.obj
__Lstack 0 0 STACK 2 stack main.obj
__Ltext0 0 0 ABS 0 text0 main.obj
__Ltext1 0 0 ABS 0 text1 main.obj
__Ltext2 0 0 ABS 0 text2 main.obj
__Ltext3 0 0 ABS 0 text3 main.obj
__Hfarbss 0 0 FARRAM 0 farbss main.obj
__Lintcode_body 0 0 ABS 0 intcode_body main.obj
_PORTBbits F81 0 ABS 0 - main.obj
__Habs1 0 0 ABS 0 abs1 main.obj
__Hdata 0 0 ABS 0 data main.obj
__Hinit 4 0 CODE 0 init main.obj
__Hrbit 0 0 COMRAM 1 rbit main.obj
__Hrbss 0 0 COMRAM 1 rbss main.obj
__Htemp 0 0 COMRAM 1 temp main.obj
__Htext 0 0 ABS 0 text main.obj
__Labs1 0 0 ABS 0 abs1 main.obj
__Ldata 0 0 ABS 0 data main.obj
__Linit 0 0 CODE 0 init main.obj
__Lrbit 0 0 COMRAM 1 rbit main.obj
__Lrbss 0 0 COMRAM 1 rbss main.obj
__Ltemp 0 0 COMRAM 1 temp main.obj
__Ltext 0 0 ABS 0 text main.obj
__CFG_XINST$OFF 0 0 ABS 0 - main.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__Hintret 0 0 ABS 0 intret main.obj
__Hirdata 0 0 CODE 0 irdata main.obj
__S0 30000E 0 ABS 0 - main.obj
__S1 8 0 ABS 0 - main.obj
__S2 0 0 ABS 0 - main.obj
__Lbigdata 0 0 BIGRAM 1 bigdata main.obj
__Hnvrram 0 0 COMRAM 1 nvrram main.obj
__Lintentry 0 0 ABS 0 intentry main.obj
__Hramtop F00 0 RAM 0 ramtop main.obj
__Hrparam 0 0 COMRAM 1 rparam main.obj
__CFG_PWRTEN$OFF 0 0 ABS 0 - main.obj
__activetblptr 0 0 ABS 0 - main.obj
__Hstruct 0 0 COMRAM 1 struct main.obj
__CFG_BBSIZ$BB2K 0 0 ABS 0 - main.obj
__Lbank10 0 0 ABS 0 bank10 main.obj
__Lbank11 0 0 ABS 0 bank11 main.obj
__Lbank12 0 0 ABS 0 bank12 main.obj
__Lbank13 0 0 ABS 0 bank13 main.obj
__Lbank14 0 0 ABS 0 bank14 main.obj
__Lbigbss 0 0 BIGRAM 1 bigbss main.obj
__Lbigram 0 0 ABS 0 bigram main.obj
__CFG_INTOSCSEL$HIGH 0 0 ABS 0 - main.obj
__CFG_BORV$3 0 0 ABS 0 - main.obj
__Lcomram 0 0 ABS 0 comram main.obj
__Lconfig 300000 0 CONFIG 0 config main.obj
__Lfarbss 0 0 FARRAM 0 farbss main.obj
__Lfardata 0 0 FARRAM 0 fardata main.obj
stackhi E40 0 ABS 0 - startup.obj
stacklo 60 0 ABS 0 - startup.obj
__Lintcode 0 0 CODE 0 intcode main.obj
__Lintret 0 0 ABS 0 intret main.obj
__Lirdata 0 0 CODE 0 irdata main.obj
__Lspace_0 0 0 ABS 0 - main.obj
__Lspace_1 0 0 ABS 0 - main.obj
__Lspace_2 0 0 ABS 0 - main.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__CFG_RETEN$OFF 0 0 ABS 0 - main.obj
end_of_initialization 7FD4 0 CODE 0 cinit main.obj
__Lnvrram 0 0 COMRAM 1 nvrram main.obj
__Hintentry 0 0 ABS 0 intentry main.obj
__CFG_STVREN$ON 0 0 ABS 0 - main.obj
__Hreset_vec 0 0 CODE 0 reset_vec main.obj
_initCan 7FC8 0 CODE 0 text2 main.obj
__Lramtop F00 0 RAM 0 ramtop main.obj
__Lrparam 0 0 COMRAM 1 rparam main.obj
__pcinit 7FD4 0 CODE 0 cinit main.obj
__ptext0 7FDA 0 CODE 0 text0 main.obj
__ptext1 7FCE 0 CODE 0 text1 main.obj
__ptext2 7FC8 0 CODE 0 text2 main.obj
__ptext3 7FCA 0 CODE 0 text3 main.obj
__Lstruct 0 0 COMRAM 1 struct main.obj
__ramtop F00 0 RAM 0 ramtop startup.obj
__Lpowerup 0 0 CODE 0 powerup main.obj
main@myWord 6 0 COMRAM 1 cstackCOMRAM main.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__Lreset_vec 0 0 CODE 0 reset_vec main.obj
__CFG_SOSCSEL$HIGH 0 0 ABS 0 - main.obj
___param_bank 0 0 ABS 0 - main.obj
__Hbigdata 0 0 BIGRAM 1 bigdata main.obj
__end_of__initialization 7FD4 0 CODE 0 cinit main.obj
__CFG_WRT0$OFF 0 0 ABS 0 - main.obj
__CFG_WRT1$OFF 0 0 ABS 0 - main.obj
__CFG_WRT2$OFF 0 0 ABS 0 - main.obj
__CFG_WRT3$OFF 0 0 ABS 0 - main.obj
__CFG_PLLCFG$ON 0 0 ABS 0 - main.obj
__CFG_WRTB$OFF 0 0 ABS 0 - main.obj
__Libigdata 0 0 CODE 0 ibigdata main.obj
__CFG_WRTC$OFF 0 0 ABS 0 - main.obj
__CFG_WRTD$OFF 0 0 ABS 0 - main.obj
__Lclrtext 0 0 ABS 0 clrtext main.obj
__pcstackCOMRAM 1 0 COMRAM 1 cstackCOMRAM main.obj
__CFG_BOREN$SBORDIS 0 0 ABS 0 - main.obj
__CFG_CANMX$PORTB 0 0 ABS 0 - main.obj
__end_of_main 8000 0 CODE 0 text0 main.obj
__CFG_CP0$OFF 0 0 ABS 0 - main.obj
__CFG_CP1$OFF 0 0 ABS 0 - main.obj
__HRAM 0 0 ABS 0 - main.obj
__Hbss 0 0 RAM 1 bss main.obj
__Hram 0 0 ABS 0 ram main.obj
__Hsfr 0 0 ABS 0 sfr main.obj
__LRAM 1 0 ABS 0 - main.obj
__Lbss 0 0 RAM 1 bss main.obj
__Lram 0 0 ABS 0 ram main.obj
__Lsfr 0 0 ABS 0 sfr main.obj
__CFG_CP2$OFF 0 0 ABS 0 - main.obj
__CFG_CP3$OFF 0 0 ABS 0 - main.obj
__CFG_CPB$OFF 0 0 ABS 0 - main.obj
__CFG_CPD$OFF 0 0 ABS 0 - main.obj
__size_of_blinkLed 0 0 ABS 0 - main.obj
__initialization 7FD4 0 CODE 0 cinit main.obj
__Hfardata 0 0 FARRAM 0 fardata main.obj
__Hsmallconst 0 0 SMALLCONST 0 smallconst main.obj
__Lifardata 0 0 CODE 0 ifardata main.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hintcode 0 0 CODE 0 intcode main.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7FD4 7FD4 6 1
text0 0 7FDA 7FDA 26 1
text1 0 7FCE 7FCE 6 1
text2 0 7FC8 7FC8 2 1
text3 0 7FCA 7FCA 4 1
cstackCOMRAM 1 1 1 7 1
reset_vec 0 0 0 4 1
config 0 300000 300000 E 1
